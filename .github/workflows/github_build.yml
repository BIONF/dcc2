# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: github build

on:
  push:
    branches: [ master ]
    tags:
    - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test
      run: |
        pwd
        pip install .
        dcc.prepare -o .
        ls /home/runner/work/dcc2/dcc2
        head /home/runner/work/dcc2/dcc2/oma-species.txt
        head /share/project/vinh/DATA/data_oma_220927/oma-groups.txt
        # dcc.parseOmaById -g 1 -n HUMAN,THEAM,DESM0 -o ./dcc -j test1 -d /home/runner/work/dcc2/dcc2 --cpus 8
        dcc.parseOmaBySpec -n HUMAN,ECOLI,YEAST -o ./dcc -j test2 -d /home/runner/work/dcc2/dcc2 --cpus 8
    - name: Deploy
      if: startsWith(github.event.ref, 'refs/tags')
      uses: casperdcl/deploy-pypi@v2
      with:
        password: ${{ secrets.pypi }}
        build: true
        upload: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
